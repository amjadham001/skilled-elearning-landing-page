/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@import url("https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:ital,wght@0,200..800;1,200..800&display=swap");
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-slate-100: oklch(96.8% 0.007 247.896);
    --spacing: 0.25rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --font-weight-medium: 500;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --radius-2xl: 1rem;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --font-plus-jakarta: "Plus Jakarta Sans", sans-serif;
    --color-skilled-blue-900: #13183f;
    --color-skilled-blue-600: #666ca3;
    --color-skilled-gray: #84879a;
    --color-skilled-white: #ffffff;
    --color-skilled-stops-orange: #ff6f48;
    --color-skilled-stops-pink: #f02aa6;
    --color-skilled-stops-purple: #4851ff;
    --color-skilled-stops-white: #ffffff;
    --color-skilled-stops-lavender: #f0f1ff;
    --drop-shadow-skilled: 0 25px 50px color-mix(in oklab, #06168d 5%, transparent);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .inset-x-0 {
    inset-inline: calc(var(--spacing) * 0);
  }
  .-top-7 {
    top: calc(var(--spacing) * -7);
  }
  .-top-\[10px\] {
    top: calc(10px * -1);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .-left-0 {
    left: calc(var(--spacing) * -0);
  }
  .-left-10 {
    left: calc(var(--spacing) * -10);
  }
  .-left-\[10px\] {
    left: calc(10px * -1);
  }
  .-left-\[13px\] {
    left: calc(13px * -1);
  }
  .-left-\[14px\] {
    left: calc(14px * -1);
  }
  .-left-\[15px\] {
    left: calc(15px * -1);
  }
  .-left-\[20px\] {
    left: calc(20px * -1);
  }
  .-left-\[50px\] {
    left: calc(50px * -1);
  }
  .-left-\[70px\] {
    left: calc(70px * -1);
  }
  .-left-\[75px\] {
    left: calc(75px * -1);
  }
  .-left-\[76px\] {
    left: calc(76px * -1);
  }
  .-left-\[77px\] {
    left: calc(77px * -1);
  }
  .-left-\[78px\] {
    left: calc(78px * -1);
  }
  .-left-\[80px\] {
    left: calc(80px * -1);
  }
  .left-8 {
    left: calc(var(--spacing) * 8);
  }
  .z-1 {
    z-index: 1;
  }
  .col-span-full {
    grid-column: 1 / -1;
  }
  .row-span-3 {
    grid-row: span 3 / span 3;
  }
  .mt-7 {
    margin-top: calc(var(--spacing) * 7);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-10 {
    margin-bottom: calc(var(--spacing) * 10);
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .table {
    display: table;
  }
  .h-80 {
    height: calc(var(--spacing) * 80);
  }
  .h-\[409px\] {
    height: 409px;
  }
  .w-\[300\] {
    width: 300;
  }
  .w-\[300px\] {
    width: 300px;
  }
  .w-\[310px\] {
    width: 310px;
  }
  .w-\[435px\] {
    width: 435px;
  }
  .max-w-none {
    max-width: none;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .resize {
    resize: both;
  }
  .grid-rows-subgrid {
    grid-template-rows: subgrid;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .gap-y-6 {
    row-gap: calc(var(--spacing) * 6);
  }
  .gap-y-8 {
    row-gap: calc(var(--spacing) * 8);
  }
  .gap-y-12 {
    row-gap: calc(var(--spacing) * 12);
  }
  .justify-self-start {
    justify-self: flex-start;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .bg-red-400 {
    background-color: var(--color-red-400);
  }
  .bg-red-400\/0 {
    background-color: color-mix(in srgb, oklch(70.4% 0.191 22.216) 0%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-red-400) 0%, transparent);
    }
  }
  .bg-skilled-blue-900 {
    background-color: var(--color-skilled-blue-900);
  }
  .bg-skilled-white {
    background-color: var(--color-skilled-white);
  }
  .bg-slate-100 {
    background-color: var(--color-slate-100);
  }
  .bg-slate-100\/80 {
    background-color: color-mix(in srgb, oklch(96.8% 0.007 247.896) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-slate-100) 80%, transparent);
    }
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }
  .pt-16 {
    padding-top: calc(var(--spacing) * 16);
  }
  .pt-22 {
    padding-top: calc(var(--spacing) * 22);
  }
  .pt-22\.75 {
    padding-top: calc(var(--spacing) * 22.75);
  }
  .pb-10 {
    padding-bottom: calc(var(--spacing) * 10);
  }
  .pb-20 {
    padding-bottom: calc(var(--spacing) * 20);
  }
  .font-plus-jakarta {
    font-family: var(--font-plus-jakarta);
  }
  .text-skilled-blue-900 {
    color: var(--color-skilled-blue-900);
  }
  .text-skilled-gray {
    color: var(--color-skilled-gray);
  }
  .text-skilled-white {
    color: var(--color-skilled-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .drop-shadow-skilled {
    --tw-drop-shadow-size: drop-shadow(0 25px 50px var(--tw-drop-shadow-color, color-mix(in oklab, #06168d 5%, transparent)));
    --tw-drop-shadow: drop-shadow(var(--drop-shadow-skilled));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .sm\:-top-\[10px\] {
    @media (width >= 23.4375rem) {
      top: calc(10px * -1);
    }
  }
  .sm\:-left-\[50px\] {
    @media (width >= 23.4375rem) {
      left: calc(50px * -1);
    }
  }
  .sm\:h-\[409px\] {
    @media (width >= 23.4375rem) {
      height: 409px;
    }
  }
  .sm\:w-\[435px\] {
    @media (width >= 23.4375rem) {
      width: 435px;
    }
  }
  .md\:relative {
    @media (width >= 48rem) {
      position: relative;
    }
  }
  .md\:top-auto {
    @media (width >= 48rem) {
      top: auto;
    }
  }
  .md\:-bottom-\[79px\] {
    @media (width >= 48rem) {
      bottom: calc(79px * -1);
    }
  }
  .md\:-left-\[30px\] {
    @media (width >= 48rem) {
      left: calc(30px * -1);
    }
  }
  .md\:-z-1 {
    @media (width >= 48rem) {
      z-index: calc(1 * -1);
    }
  }
  .md\:col-span-4 {
    @media (width >= 48rem) {
      grid-column: span 4 / span 4;
    }
  }
  .md\:mt-7 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 7);
    }
  }
  .md\:h-100 {
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 100);
    }
  }
  .md\:h-\[723px\] {
    @media (width >= 48rem) {
      height: 723px;
    }
  }
  .md\:w-\[695px\] {
    @media (width >= 48rem) {
      width: 695px;
    }
  }
  .md\:items-center {
    @media (width >= 48rem) {
      align-items: center;
    }
  }
  .md\:overflow-visible {
    @media (width >= 48rem) {
      overflow: visible;
    }
  }
  .md\:py-6 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 6);
    }
  }
  .md\:pt-16 {
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 16);
    }
  }
  .md\:pt-24 {
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 24);
    }
  }
  .md\:pb-10 {
    @media (width >= 48rem) {
      padding-bottom: calc(var(--spacing) * 10);
    }
  }
  .md\:pb-36 {
    @media (width >= 48rem) {
      padding-bottom: calc(var(--spacing) * 36);
    }
  }
  .md\:max-xl\:px-6 {
    @media (width >= 48rem) {
      @media (width < 90rem) {
        padding-inline: calc(var(--spacing) * 6);
      }
    }
  }
  .md\:max-xl\:py-3 {
    @media (width >= 48rem) {
      @media (width < 90rem) {
        padding-block: calc(var(--spacing) * 3);
      }
    }
  }
  .xl\:-bottom-\[64px\] {
    @media (width >= 90rem) {
      bottom: calc(64px * -1);
    }
  }
  .xl\:-left-\[6px\] {
    @media (width >= 90rem) {
      left: calc(6px * -1);
    }
  }
  .xl\:col-span-6 {
    @media (width >= 90rem) {
      grid-column: span 6 / span 6;
    }
  }
  .xl\:h-140 {
    @media (width >= 90rem) {
      height: calc(var(--spacing) * 140);
    }
  }
  .xl\:h-\[938px\] {
    @media (width >= 90rem) {
      height: 938px;
    }
  }
  .xl\:w-114 {
    @media (width >= 90rem) {
      width: calc(var(--spacing) * 114);
    }
  }
  .xl\:w-\[1046px\] {
    @media (width >= 90rem) {
      width: 1046px;
    }
  }
  .xl\:gap-y-14 {
    @media (width >= 90rem) {
      row-gap: calc(var(--spacing) * 14);
    }
  }
  .xl\:px-8 {
    @media (width >= 90rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .xl\:py-4 {
    @media (width >= 90rem) {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .xl\:pt-26\.75 {
    @media (width >= 90rem) {
      padding-top: calc(var(--spacing) * 26.75);
    }
  }
}
@layer components {
  .skilled-container {
    padding-inline: calc(var(--spacing) * 5);
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 11);
    }
    @media (width >= 90rem) {
      padding-inline: calc(var(--spacing) * 20);
    }
    margin-inline: auto;
    max-width: calc(var(--spacing) * 93.75);
    @media (width >= 48rem) {
      max-width: calc(var(--spacing) * 192);
    }
    @media (width >= 90rem) {
      max-width: calc(var(--spacing) * 320);
    }
  }
  .skilled-grid {
    display: grid;
    grid-template-columns: repeat(4, minmax(0, 1fr));
    @media (width >= 48rem) {
      grid-template-columns: repeat(8, minmax(0, 1fr));
    }
    @media (width >= 90rem) {
      grid-template-columns: repeat(12, minmax(0, 1fr));
    }
    column-gap: calc(var(--spacing) * 4);
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 6);
    }
    @media (width >= 90rem) {
      column-gap: calc(var(--spacing) * 8);
    }
  }
  .skilled-typo-1 {
    font-size: 2.5rem;
    --tw-leading: 120%;
    line-height: 120%;
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
    @media (width >= 90rem) {
      font-size: 3.5rem;
    }
  }
  .skilled-typo-2 {
    font-size: 2rem;
    --tw-leading: 120%;
    line-height: 120%;
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
    @media (width >= 90rem) {
      font-size: 2.5rem;
    }
  }
  .skilled-typo-3 {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
    --tw-leading: 120%;
    line-height: 120%;
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
    @media (width >= 90rem) {
      font-size: 2rem;
    }
  }
  .skilled-typo-4 {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --tw-leading: 120%;
    line-height: 120%;
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
    @media (width >= 90rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .skilled-typo-5 {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --tw-leading: 150%;
    line-height: 150%;
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .skilled-typo-6 {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-leading: 120%;
    line-height: 120%;
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    @media (width >= 90rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
      --tw-leading: 150%;
      line-height: 150%;
    }
  }
  .skilled-typo-7 {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --tw-leading: 150%;
    line-height: 150%;
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .skilled-typo-8 {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: 150%;
    line-height: 150%;
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .skilled-logo {
    height: calc(var(--spacing) * 5);
    object-fit: cover;
    @media (width >= 90rem) {
      height: calc(var(--spacing) * 7);
    }
  }
  .skilled-link {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --tw-leading: 150%;
    line-height: 150%;
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: #f74780;
    &:hover {
      @media (hover: hover) {
        cursor: pointer;
        color: #ffa7c3;
      }
    }
  }
  .skilled-btn {
    border-radius: 1.75rem;
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --tw-leading: 150%;
    line-height: 150%;
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    text-transform: capitalize;
    &:hover {
      @media (hover: hover) {
        cursor: pointer;
      }
    }
  }
  .skilled-btn--black {
    background-color: var(--color-skilled-blue-900);
    color: var(--color-skilled-white);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-skilled-blue-600);
      }
    }
  }
  .skilled-btn--orange {
    --tw-gradient-position: to bottom;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to bottom in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
    --tw-gradient-from: var(--color-skilled-stops-orange);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    --tw-gradient-to: var(--color-skilled-stops-pink);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    color: var(--color-skilled-white);
    &:hover {
      @media (hover: hover) {
        background-image: linear-gradient(	to bottom,	color-mix(in srgb, #ffffff 50%, transparent),	color-mix(in srgb, #ffffff 50%, transparent)	),	linear-gradient(	to bottom,	var(--color-skilled-stops-orange),	var(--color-skilled-stops-pink)	);
        @supports (color: color-mix(in lab, red, red)) {
          background-image: linear-gradient(	to bottom,	color-mix(in oklab, var(--color-skilled-stops-white) 50%, transparent),	color-mix(in oklab, var(--color-skilled-stops-white) 50%, transparent)	),	linear-gradient(	to bottom,	var(--color-skilled-stops-orange),	var(--color-skilled-stops-pink)	);
        }
      }
    }
  }
  .skilled-btn--purple {
    --tw-gradient-position: to bottom;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to bottom in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
    --tw-gradient-from: var(--color-skilled-stops-pink);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    --tw-gradient-to: var(--color-skilled-stops-purple);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    color: var(--color-skilled-white);
    &:hover {
      @media (hover: hover) {
        background-image: linear-gradient(	to bottom,	color-mix(in srgb, #ffffff 50%, transparent),	color-mix(in srgb, #ffffff 50%, transparent)	),	linear-gradient(	to bottom,	var(--color-skilled-stops-pink),	var(--color-skilled-stops-purple)	);
        @supports (color: color-mix(in lab, red, red)) {
          background-image: linear-gradient(	to bottom,	color-mix(in oklab, var(--color-skilled-stops-white) 50%, transparent),	color-mix(in oklab, var(--color-skilled-stops-white) 50%, transparent)	),	linear-gradient(	to bottom,	var(--color-skilled-stops-pink),	var(--color-skilled-stops-purple)	);
        }
      }
    }
  }
  .skilled-dropshadow {
    filter: drop-shadow(var(--drop-shadow-skilled));
  }
  .skilled-gradient-orange-pink {
    --tw-gradient-position: to bottom;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to bottom in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
    --tw-gradient-from: var(--color-skilled-stops-orange);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    --tw-gradient-to: var(--color-skilled-stops-pink);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .skilled-gradient-white-lavender {
    --tw-gradient-position: to bottom;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to bottom in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
    --tw-gradient-from: var(--color-skilled-stops-white);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    --tw-gradient-to: var(--color-skilled-stops-lavender);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
    }
  }
}
